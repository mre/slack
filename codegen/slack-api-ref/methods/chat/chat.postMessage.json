{
  "group": "chat",
  "name": "chat.postMessage",
  "desc": "This method posts a message to a public channel, private channel, or direct message/IM channel.",
  "args": {
    "channel": {
      "required": true,
      "example": "C1234567890",
      "desc": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See below for more details.",
      "type": "channel"
    },
    "text": {
      "required": true,
      "example": "Hello world",
      "desc": "Text of the message to send. See below for an explanation of formatting. This field is usually required, unless you're providing only attachments instead."
    },
    "parse": {
      "required": false,
      "example": "full",
      "desc": "Change how messages are treated. Defaults to none. See below."
    },
    "link_names": {
      "required": false,
      "example": "1",
      "desc": "Find and link channel names and usernames."
    },
    "attachments": {
      "required": false,
      "example": "[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]",
      "desc": "Structured message attachments."
    },
    "unfurl_links": {
      "required": false,
      "example": "true",
      "desc": "Pass true to enable unfurling of primarily text-based content."
    },
    "unfurl_media": {
      "required": false,
      "example": "false",
      "desc": "Pass false to disable unfurling of media content."
    },
    "username": {
      "required": false,
      "example": "My Bot",
      "desc": "Set your bot's user name. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below."
    },
    "as_user": {
      "required": false,
      "example": "true",
      "desc": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See authorship below."
    },
    "icon_url": {
      "required": false,
      "example": "http://lorempixel.com/48/48",
      "desc": "URL to an image to use as the icon for this message. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below."
    },
    "icon_emoji": {
      "required": false,
      "example": ":chart_with_upwards_trend:",
      "desc": "emoji to use as the icon for this message. Overrides icon_url. Must be used in conjunction with as_user set to false, otherwise ignored. See authorship below."
    }
  },
  "errors": {
    "channel_not_found": "Value passed for channel was invalid.",
    "not_in_channel": "Cannot post user messages to a channel they are not in.",
    "is_archived": "Channel has been archived.",
    "msg_too_long": "Message text is too long.",
    "no_text": "No message text provided.",
    "too_many_attachments": "Too many attachments were provided with this message. A maximum of 100 attachments are allowed on a message.",
    "rate_limited": "Application has posted too many messages, read the Rate Limit documentation for more information.",
    "not_authed": "No authentication token provided.",
    "invalid_auth": "Invalid authentication token.",
    "account_inactive": "Authentication token is for a deleted user or team.",
    "invalid_arg_name": "The method was passed an argument whose name falls outside the bounds of common decency. This includes very long names and names with non-alphanumeric characters other than _. If you get this error, it is typically an indication that you have made a very malformed API call.",
    "invalid_array_arg": "The method was passed a PHP-style array argument (e.g. with a name like foo[7]). These are never valid with the Slack API.",
    "invalid_charset": "The method was called via a POST request, but the charset specified in the Content-Type header was invalid. Valid charset names are: utf-8 iso-8859-1.",
    "invalid_form_data": "The method was called via a POST request with Content-Type application/x-www-form-urlencoded or multipart/form-data, but the form data was either missing or syntactically invalid.",
    "invalid_post_type": "The method was called via a POST request, but the specified Content-Type was invalid. Valid types are: application/json application/x-www-form-urlencoded multipart/form-data text/plain.",
    "missing_post_type": "The method was called via a POST request and included a data payload, but the request did not include a Content-Type header.",
    "request_timeout": "The method was called via a POST request, but the POST data was either missing or truncated."
  }
}